create database Dynamic_Event_Schedule;
use Dynamic_Event_Schedule;

DROP TABLE IF EXISTS `WishList`;
DROP TABLE IF EXISTS `Participants`;
DROP TABLE IF EXISTS `EventVenu`;
DROP TABLE IF EXISTS `Events`;
DROP TABLE IF EXISTS `UserInterested`;
DROP TABLE IF EXISTS `Users`;
DROP TABLE IF EXISTS `EventCategies`;


CREATE TABLE IF NOT EXISTS `EventCategies`(
`CatID` INT PRIMARY KEY AUTO_INCREMENT,
`Tag` VARCHAR(30) NOT NULL
);

CREATE TABLE IF NOT EXISTS `Users`(
`UserID` INT PRIMARY KEY AUTO_INCREMENT,
`FullName` VARCHAR(30) NOT NULL,
`Email` VARCHAR(30) NOT NULL,
`Password` VARCHAR(30) NOT NULL,
`PhoneNo` VARCHAR(100) NOT NULL,
CONSTRAINT unq_email UNIQUE (Email)
);

CREATE TABLE IF NOT EXISTS `UserInterested`(
`UserInterestedID` INT PRIMARY KEY AUTO_INCREMENT,
`UserId` INT NOT NULL,
`CatId` INT NOT NULL,
CONSTRAINT fk_UserInterest FOREIGN KEY(UserId) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_CateInterest FOREIGN KEY(CatID) REFERENCES EventCategies(CatID) ON UPDATE CASCADE ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS `Events`(
`EventID` INT PRIMARY KEY AUTO_INCREMENT,
`UserCreated` int NOT NULL,
`Title` VARCHAR(30) NOT NULL,
`Description` VARCHAR(30) NOT NULL,
`Poster` VARCHAR(100) NOT NULL,
`CatID` INT NOT NULL,
CONSTRAINT fk_UserCreated FOREIGN KEY(UserCreated) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_CatID FOREIGN KEY(CatID) REFERENCES EventCategies(CatID) ON UPDATE CASCADE ON DELETE CASCADE
);

create TABLE IF NOT EXISTS `EventVenue` (
`EventVenuID` INT PRIMARY KEY AUTO_INCREMENT,
`Date` VARCHAR(100) NOT NULL,
`Time` VARCHAR(100) NOT NULL,
`Duration` VARCHAR(100) NOT NULL,
`EventID` INT NOT NULL,
CONSTRAINT fk_EventVen FOREIGN KEY(EventID) REFERENCES Events(EventID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `Participants`(
`ParticipantsID` INT PRIMARY KEY AUTO_INCREMENT,
`UserPart` INT NOT NULL,
`EventId` INT NOT NULL,
`Status` VARCHAR(20) NOT NULL,
CONSTRAINT fk_UserPart FOREIGN KEY(Userpart) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_EventPart FOREIGN KEY(EventID) REFERENCES Events(EventID) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS `WishList`(
`WishListID` INT PRIMARY KEY AUTO_INCREMENT,
`UserID` INT NOT NULL,
`EventId` INT NOT NULL,
CONSTRAINT fk_UserWish FOREIGN KEY(UserID) REFERENCES Users(UserID) ON UPDATE CASCADE ON DELETE CASCADE,
CONSTRAINT fk_EventWish FOREIGN KEY(EventID) REFERENCES Events(EventID) ON UPDATE CASCADE ON DELETE CASCADE
);
